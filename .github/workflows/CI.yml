name: CI

on:
  pull_request:
  push:
    branches:
      - master

env:
  IMAGE: lion-app

jobs:
  lint:
    name: Check Lint (black)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: "3.11"
      - name: install black
        run: pip install black
      - name: check black
        run: black --check .

  build:
    needs: lint
    name: Build and Push Image
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: test
        run: |
          docker compose -f docker-compose.test.yml up --build -d
          docker compose -f docker-compose.test.yml run lion-app python manage.py test

      - name: test down
        if: ${{ always() }}
        run: |
          docker compose -f docker-compose.test.yml down

      - name: Set up Docker buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to NCR
        uses: docker/login-action@v2
        with:
          registry: ${{ vars.NCR_REGISTRY }}
          username: ${{ secrets.NCR_ACCESS_KEY_ID }}
          password: ${{ secrets.NCR_SECRET_KEY }}

      - name: Get current timestamp
        id: timestamp
        run: echo "timestamp=$(date '+%s')" >> "$GITHUB_OUTPUT"

      - name: Build
        uses: docker/build-push-action@v4
        with:
          context: lion_app
          tags: "${{ env.IMAGE }}:${{ steps.timestamp.outputs.timestamp }}"
          push: true
          # load: true

      # - name: Run Tests
      #   run: |
      #     docker run -d --rm --name test_app \
      #       -e RUN_MODE=test \
      #       ${{ env.IMAGE }}:${{ steps.timestamp.outputs.timestamp }}
      #     docker exec test_app python manage.py test
      #     docker stop test_app

      # - name: Push to NCR
      #   uses: docker/build-push-action@v4
      #   with:
      #     context: lion_app
      #     tags: ${{ env.IMAGE_TAG }},"${{ env.IMAGE }}:${{ steps.timestamp.outputs.timestamp }}"
      #     push: true
